%h1.center US Treasuries Yield Curve

.section-chart
  .container
    .row
      .col-md-offset-1.col-md-19#chart-navigation{ style: 'padding-left: 50px;' }
        =text_field_tag(:report_date, '', id: 'text-date-navigation').html_safe
    .row
      .col-md-offset-1.col-md-10.interest-rate-chart.center

        #chart-canvas-horizontal
          #chart-canvas{ style: 'position: relative; max-width: 877px;' }
            %canvas#chartTreasuryYieldCurve

    .row
      .col-lg-12.center
        = "For an explanation: #{link_to('Term Structure of Interest Rates', 'http://www.investopedia.com/terms/t/termstructure.asp', target: '_blank')}".html_safe


:javascript
  window.chartColors = {
    blue: 'rgb(54, 162, 235)',
    red: 'rgb(255, 99, 132)',
    yellow: 'rgb(255, 205, 86)',
    green: 'rgb(75, 192, 192)',
    orange: 'rgb(255, 159, 64)',
    purple: 'rgb(153, 102, 255)',
    grey: 'rgb(201, 203, 207)'
  };
  const TERMS = ['1M', '3M', '6M', '1Y', '2Y', '3Y', '5Y', '7Y', '10Y', '20Y', '30Y']
  var config = {
      type: 'line',
      data: {
          labels: TERMS,
          datasets: []
      },
      options: {
          responsive: true,
          title:{
              display:true,
              text:'US Treasuries Yield Curve',
          },
          tooltips: {
              mode: 'index',
              intersect: false,
          },
          hover: {
              mode: 'nearest',
              intersect: true
          },
          scales: {
              xAxes: [{
                  display: true,
                  scaleLabel: {
                      display: true,
                      labelString: 'Term'
                  }
              }],
              yAxes: [{
                  display: true,
                  scaleLabel: {
                      display: true,
                      labelString: 'Yield (%)'
                  }
              }]
          }
      },
  };

  setDateNavigationText = function(text) {
    $('input#text-date-navigation').val(text)
  }

  addData = function(yield_curve_date, values) {
    var newDataset = {
      label: "As of " + yield_curve_date,
      backgroundColor: nextChartColor(config.data.datasets.length + 1),
      borderColor: nextChartColor(config.data.datasets.length + 1),
      data: values,
      fill: false,
    };

    config.data.datasets.push(newDataset);
    window.chartTreasuryYieldCurve.update();
  }

  removeTopDataset = function() {
    config.data.datasets.pop();
    window.chartTreasuryYieldCurve.update();
  }

  formatDate = function(date, format) {
    var day = date.getDate();
    var month = date.getMonth() + 1;
    var year = date.getFullYear();

    var pad = "00";

    if(format=='YYYYMMDD') {
      return year + pad.substring(0, pad.length - month.toString().length) + month + pad.substring(0, pad.length - day.toString().length) + day;
    } else {
      return month + '/' + day + '/' + year;
    };
  }

  fetchData = function(as_of_date, replace=false) {
    if(as_of_date==null) as_of_date = new Date();

    $.get('/api/v1/yield_curve_snapshot', {date: formatDate(as_of_date, 'YYYYMMDD')}, function(data) {
        if(replace) {
          removeTopDataset();
        };
        sDate = formatDate(new Date(Date.parse(data[0]['yield_curve_date'].replace(/-/g, '/') + " GMT-0400 (EDT)")))
        addData(
          sDate,
          [
            parseFloat(data[0]['yield_1m']),
            parseFloat(data[0]['yield_3m']),
            parseFloat(data[0]['yield_6m']),
            parseFloat(data[0]['yield_1y']),
            parseFloat(data[0]['yield_2y']),
            parseFloat(data[0]['yield_3y']),
            parseFloat(data[0]['yield_5y']),
            parseFloat(data[0]['yield_7y']),
            parseFloat(data[0]['yield_10y']),
            parseFloat(data[0]['yield_20y']),
            parseFloat(data[0]['yield_30y']),
          ]
        );
        setDateNavigationText(sDate);
    });
  }

  nextChartColor = function(datasetnum) {
    chartColors = Object.values(window.chartColors);
    return chartColors[datasetnum % chartColors.length - 1];
  };

  window.onload = function() {
      var ctx = document.getElementById("chartTreasuryYieldCurve").getContext("2d");
      window.chartTreasuryYieldCurve = new Chart(ctx, config);
      fetchData();
  };

  $("#text-date-navigation").datepicker({
    onSelect: function(dateText, inst) {
        var date = new Date($(this).val());
        fetchData(date, true)
    }
  });

  // document.getElementById('randomizeData').addEventListener('click', function() {
  //     config.data.datasets.forEach(function(dataset) {
  //         dataset.data = dataset.data.map(function() {
  //             return randomScalingFactor();
  //         });
  //
  //     });
  //
  //     window.myLine.update();
  // });
  //
  // var colorNames = Object.keys(window.chartColors);
  // document.getElementById('addDataset').addEventListener('click', function() {
  //     var colorName = colorNames[config.data.datasets.length % colorNames.length];
  //     var newColor = window.chartColors[colorName];
  //     var newDataset = {
  //         label: 'Dataset ' + config.data.datasets.length,
  //         backgroundColor: newColor,
  //         borderColor: newColor,
  //         data: [],
  //         fill: false
  //     };
  //
  //     for (var index = 0; index < config.data.labels.length; ++index) {
  //         newDataset.data.push(randomScalingFactor());
  //     }
  //
  //     config.data.datasets.push(newDataset);
  //     window.myLine.update();
  // });
  //
  // document.getElementById('addData').addEventListener('click', function() {
  //     if (config.data.datasets.length > 0) {
  //         var month = MONTHS[config.data.labels.length % MONTHS.length];
  //         config.data.labels.push(month);
  //
  //         config.data.datasets.forEach(function(dataset) {
  //             dataset.data.push(randomScalingFactor());
  //         });
  //
  //         window.myLine.update();
  //     }
  // });
  //
  // document.getElementById('removeDataset').addEventListener('click', function() {
  //     config.data.datasets.splice(0, 1);
  //     window.myLine.update();
  // });
  //
  // document.getElementById('removeData').addEventListener('click', function() {
  //     config.data.labels.splice(-1, 1); // remove the label first
  //
  //     config.data.datasets.forEach(function(dataset, datasetIndex) {
  //         dataset.data.pop();
  //     });
  //
  //     window.myLine.update();
  // });


= render partial: 'google_analytics'